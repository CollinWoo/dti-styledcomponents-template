import Head from "next/head";
import {
  Container,
  Main,
  Description,
  CodeTag,
} from "../components/sharedstyles";
import Cards from "../components/cards";
import styled, { ThemeProvider } from "styled-components";
import React from "react";

const ColorChangingButton = styled.button`
  background: ${({ theme }) => theme.colors.primary};
  color: ${({ theme }) => theme.colors.secondary};
  border: 2px solid ${({ theme }) => theme.colors.secondary};
  border-radius: 2rem;
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  &:hover {
    background: ${({ theme }) => theme.colors.secondary};
    color: ${({ theme }) => theme.colors.primary};
  }
`;

const Title = styled.h1`
  color: ${({ theme }) => theme.colors.primary};
  margin: 0 0 2rem 0;
  line-height: 1.15;
  font-size: 4em;
  text-align: center;
  text-decoration: none;
`;

const MainBG = styled(Main)`
  background: ${({ theme }) => theme.colors.secondary};
  width: 100vw;
`;

export default function Home() {
  const [visMode, setVisMode] = React.useState("light");

  const toggleVisMode = () => {
    setVisMode(visMode === "light" ? "dark" : "light");
  };

  const lightTheme = {
    colors: {
      primary: "#0070f3",
      secondary: "#fafafa",
    },
  };

  const darkTheme = {
    colors: {
      primary: "#fafafa",
      secondary: "#000",
    },
  };

  const infoContainer = styled.div `
    
  `

  return (
    <Container>
      <ThemeProvider theme={visMode === "light" ? lightTheme : darkTheme}>
        <Head>
          <title>Colin Wu's Portfolio</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <MainBG>
          <Title>Hello I'm Colin!</Title>

          <ColorChangingButton
            onClick={() => {
              toggleVisMode();
            }}
          >
            Click Me!
          </ColorChangingButton>

        </MainBG>
      </ThemeProvider>
    </Container>
  );
}
